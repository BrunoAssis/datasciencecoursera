identical('twins','twins')
xor(5==6,!FALSE)
ints <- sample(10)
ints
ints > 5
which(ints>7)
any(ints < 0)
all(ints > 0)
add2 <- function(x, y) {
x + y
}
add2(3,5)
above10 <- function(v) {
use <- v > 10
v[use]
}
above10(c(10,11,13,4,15,2,45))
above <- function(v, n) {
use <- v > n
v[use]
}
above(c(10,11,13,4,15,2,45), 5)
v <- c(10,11,13,4,15,2,45)
v
v[v>10]
columnMean <- function(m) {
nc <- ncol(m)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(m[, i])
}
means
}
m <- matrix(1:6,2,3)
columnMean(m)
columnMean <- function(m, removeNA = TRUE) {
nc <- ncol(m)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(m[, i], na.rm = removeNA)
}
means
}
m <- matrix(c(1, 2, 3, NA, 4, NA, 5, 6, NA, NA),4,2)
m <- matrix(c(1, 2, 3, NA, 4, NA, 5, 6, NA, NA),2,4)
m <- matrix(c(1, 2, 3, NA, 4, NA, 5, 6, NA, NA),2,5)
columnMean(m)
m
mydata <- rnorm(100)
mydata
rm(list=ls())
sd
?s
?sd
sd(c(1,2,3,4,5,6,7,8,9))
sd(c(1,1,1,1,1,1,1,10))
sd(c(1,1,1,1,1,1,1,100))
sd(c(1,1,1,1,1,1,1,100,1,1,1,1,1,1))
sd(c(1,1,1,1,1,1,1,100,1,1,1,1,1,1,rep(1, 10000)))
f <- function(a,b){ print(a) }
f(1)
f(1, 2)
f <- function(a,b){ print(a); print(b) }
f(1,2)
f(1)
x = c(1,2,3,4,5,6,7,8,9,10)
y = c(50,60,30,20,40,80,90,20,10,10)
length(x)
length(y)
plot(x, y)
plot(x, y, type="L")
plot(x, y, type="l")
plot(x, y)
paste
?plot
plot(x, y, type="b")
?plot
plot(x, y, type="i")
plot(x, y, type="o")
plot(x, y, type="S")
plot(x, y, type="s")
plot(x, y, type="S")
plot(x, y, type="h")
?plot
plot(x, y, type="punkte")
?plot
plot(x, y, type="c")
plot(x, y, type="o")
y = c(50,60,30,20,40,80,90,20,10,10213123)
plot(x, y, type="o")
swirl(0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function()
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4, div=2)
args(remainder)
floor(11.1)
submit()
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){ x[1] }, c(8,4,0))
evaluate(function(x){ last(x) }, c(8,4,0))
evaluate(function(x){ tail(x, 1) }, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Testing", "My", "New", "Function")
submit()
mad_libs(place="SÃ£o Paulo", adjective="fat", noun="Pizza")
submit()
'I' %p% 'love' %p% 'R!'
search()
lm
lm <- 'oi'
lm
rm(lm)
lm
rm x
rm(x)
rm(y)
rm(list=ls())
z <- 1
f <- function(x) { x + z }
f(2)
f(1)
f(100)
f(1002130-12930)
rm(z)
rm(F)
f
rm(f)
f
z
f <- function(x) { function(a) { x + a } }
a <- f(3)
a
a(5)
f <- function(x) { function(a) { x + a } }
a <- 10
f <- function(x) { function(a) { x + a } }
f(20)
f(20)(20)
f(20)(30)
ls()
ls(a)
ls(f)
ls(environment(f)
)
environment(f)
environment(a)
a <- f(10)
environment(a)
environment(f)
ls(environment(f))
ls(environment(a))
optimize
optim
nlm
.External2
?.External2
?nlm
?optim
?optimize
?optimise
x <- as.Date("1970-1-1")
x
unclass(x)
x
weekdays(x)
months(x)
quarters(x)
c(as.Date("1988-7-29"), as.Date("1988-1-24"))
ds <- c(as.Date("1988-7-29"), as.Date("1988-1-24"))
weekdays(ds)
quarters(x)
quarters(ds)
t <- Sys.time()
t
t
t
t
t
t
Sys.time()
Sys.time()
Sys.time()
Sys.time()
Sys.time()
Sys.time()
Sys.time()
Sys.time()
Sys.time()
Sys.time()
Sys.time()
Sys.time()
Sys.time()
Sys.time()
Sys.time()
Sys.time()
Sys.time()
p<- as.POSIXlt(t)
p
names(unclass(p))
sec(p)
names(p)
p
p$hour
p$wday
p$zone
p$gmtoff
p$gmtoff
strptime("29/7/1988", "%d/%m/%Y")
strptime("29/7/1988", "%d/%m/%Y")
g<-strptime("29/7/1988", "%d/%m/%Y")
g
class(g)
rm(list=ls())
?strptime
x <- as.Date("2012-01-01")
y <- strptime("1988-07-29")
y <- strptime("1988-07-29", "%Y-%m-%d")
x <- as.POSIXct(x)
y <- as.POSIXct(y)
y
c
x - y
y - x
x - y
x + y
swirl()
play()
rm(list=ls())
nxt()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
d2
unclass(d2)
t1 <- Sys.time()
t
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
x <- 1:10
if (x> 5){print 'oi'}
if (x> 5) { print "oi" }
if (x > 5) { print "oi" }
if (x > 5) {
print "oi"
x
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
setwd("~/Dev/R")
test <- read.csv("specdata/001.csv")
test
names(test)
?path.expand
path.expand("~/foo")
path.expand("~/foo", "test")
file.path("teste", "oi")
source("pollutantmean.R")
pollutantmean("specdata")
pollutantmean("specdata")
pollutantmean("specdata")
pollutantmean("specdata")
source("pollutantmean.R")
pollutantmean("specdata")
source("pollutantmean.R")
pollutantmean("specdata")
source("pollutantmean.R")
pollutantmean("specdata")
source('~/Dev/R/pollutantmean.R')
test$sulfate
test["sulfate"]
test["sulfate"]
test["sulfate" & !is.na(test["sulfate"])]
test
class(test)
test$sulfate
test[is.na(test$sulfate)]
test[!is.na(test$sulfate)]
test[!is.na(test$sulfate), drop = FALSE]
test[!is.na(test$sulfate)]
?data.frame
test[is.na(test$sulfate)]
test$sulfate[is.na(test$sulfate)]
test[is.na(test$sulfate), drop = TRUE]
test[is.na(test$sulfate), drop = FALSE]
test
matrix(test, drop=FALSE)
?drop
??drop
??data.frame
class(test)
colnames(test)
names(test)
nrow(test)
test[sulfate > 10]
test[test$sulfate > 10]
test$sulfate[test$sulfate > 10]
test$sulfate[is.na(test$sulfate)]
test$sulfate[!is.na(test$sulfate)]
subset(test, !is.na(test$sulfate))
test["sulfate"]
test["sulfate"]
test["sulfate"]
subset(test["sulfate"])
subset(test, test["sulfate"])
subset(test, !is.na(test["sulfate"]))
subset(test, !is.na(test["sulfate"]))
ds <- subset(test, !is.na(test["sulfate"]))
ds <- c(ds, subset(test, !is.na(test["nitrate"])))
ds
class(ds)
ds <- subset(test, !is.na(test["sulfate"]))
ds
ns <- subset(test, !is.na(test["nitrate"]))
ns
xs <- rbind(ds, ns)
rm(ds, ns, xs, d1, d2)
rm(t1,t2,t3,t4,x)
rm(z,f)
data.frame
data.frame()
source('~/Dev/R/pollutantmean.R')
pollutantmean("specdata", "nitrate")
pollutantmean("specdata", "sulfate", 1:10)
source('~/Dev/R/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
?mean
source('~/Dev/R/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/Dev/R/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/Dev/R/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/Dev/R/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/Dev/R/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
mean(test$sulfate, na.rm = TRUE)
mean(test["sulfate"], na.rm = TRUE)
mean(test[["sulfate"]], na.rm = TRUE)
source('~/Dev/R/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source('~/Dev/R/pollutantmean.R')
ds <- data.frame(id, nobs)
ds <- data.frame("id", "nobs")
ds
?data.frame
ds <- data.frame(id = numeric(), nobs = numeric())
ds
ds <- data.frame(id = NULL, nobs = NULL
)
ds
test
head(test)
complete.cases(test)
length(complete.cases(test))
length(complete.cases(test)[1])
length(test[complete.cases(test)])
test[complete.cases(test)]
test[complete.cases(test), drop = FALSE]
subset(test, test[complete.cases(test)])
subset(test, complete.cases(test))
length(subset(test, complete.cases(test)))
length(complete.cases(test))
length(subset(complete.cases(test), TRUE))
length(subset(complete.cases(test), TRUE))
length(test)
test
nrow(test)
complete.cases(test)
complete.cases(test)[ == 1]
complete.cases(test)[1 == 1]
subset(complete.cases(test), TRUE)
sum(complete.cases(test))
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2,4,8,10,12))
complete("specdata", 30:25)
complete("specdata", 3)
source('~/Dev/R/corr.R')
source('~/Dev/R/complete.R')
?cor
getwd()
dir()
dir("specdata")
source('~/Dev/R/corr.R')
source('~/Dev/R/corr.R')
vector()
vector(numeric())
vector(numeric
)
?vector
vector(mode = "numeric")
source('~/Dev/R/corr.R')
v <- vector(mode = "numeric")
add(v, 1)
source('~/Dev/R/corr.R')
source('~/Dev/R/corr.R')
source('~/Dev/R/complete.R')
cr <- corr("specdata", 150)
source('~/Dev/R/corr.R')
warnings()
source('~/Dev/R/corr.R')
cr <- corr("specdata", 150)
test
complete('specdir', 1:100)
complete('specdata', 1:100)
complete('specdata', 1:100)[1]
complete('specdata', 3)[1]
complete('specdata', 3)
complete('specdata', 3)$nobs
source('~/Dev/R/corr.R')
cr <- corr("specdata", 150)
head(cr)
?cor
source('~/Dev/R/corr.R')
cr <- corr("specdata", 150)
source('~/Dev/R/corr.R')
cor(test$sulfate, test$nitrate)
cor(test$sulfate)
cor(test$sulfate, test$nitrate)
cor(test$sulfate[!is.na(test$sulfate)], test$nitrate[!is.na(test$nitrate)])
cor(test$sulfate[], test$nitrate[!is.na(test$nitrate)])
cond <- !is.na(test$sulfate) & !is.na(test$nitrate)
cond
cor(test$sulfate[cond], test$nitrate[cond])
source('~/Dev/R/corr.R')
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6,10,20,34,100,200,310))
print(cc$nobs)
cc <- complete("specdata", 54
)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
q()
